/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DOM/DOMCache.js":
/*!*****************************!*\
  !*** ./src/DOM/DOMCache.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst DOMCache = {\n  gameManipulation: {\n    restartGameBtn: document.querySelector(\".restart-game_btn\"),\n    resetScoreBtn: document.querySelector(\".reset-score_btn\")\n  },\n  winner: {\n    modal: document.querySelector(\".winner-modal\"),\n    message: document.querySelector(\".winner-message\"),\n    playAgainBtn: document.querySelector(\".play-again_btn\")\n  },\n  shipPlacement: {\n    modal: document.querySelector(\".ship-placement_modal\"),\n    resetPlacementBtn: document.querySelector(\".reset-placement_btn\"),\n    rotateAxisBtn: document.querySelector(\".rotate-axis_btn\"),\n    startGameBtn: document.querySelector(\".start-game_btn\"),\n    ships: document.querySelector(\".ship-placement_ships\"),\n    gameBoard: document.querySelector(\".ship-placement_gameboard\")\n  },\n  turnInfo: document.querySelector(\".turn-info\"),\n  score: {\n    1: document.querySelector(\".player-score\"),\n    2: document.querySelector(\".computer-score\")\n  },\n  gameBoards: {\n    1: document.querySelector(\".player-gameboard\"),\n    2: document.querySelector(\".computer-gameboard\")\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DOMCache);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRE9NL0RPTUNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxRQUFRLEdBQUc7RUFDZkMsZ0JBQWdCLEVBQUU7SUFDaEJDLGNBQWMsRUFBRUMsUUFBUSxDQUFDQyxhQUFhLENBQUMsbUJBQW1CLENBQUM7SUFDM0RDLGFBQWEsRUFBRUYsUUFBUSxDQUFDQyxhQUFhLENBQUMsa0JBQWtCO0VBQzFELENBQUM7RUFDREUsTUFBTSxFQUFFO0lBQ05DLEtBQUssRUFBRUosUUFBUSxDQUFDQyxhQUFhLENBQUMsZUFBZSxDQUFDO0lBQzlDSSxPQUFPLEVBQUVMLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGlCQUFpQixDQUFDO0lBQ2xESyxZQUFZLEVBQUVOLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGlCQUFpQjtFQUN4RCxDQUFDO0VBQ0RNLGFBQWEsRUFBRTtJQUNiSCxLQUFLLEVBQUVKLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLHVCQUF1QixDQUFDO0lBQ3RETyxpQkFBaUIsRUFBRVIsUUFBUSxDQUFDQyxhQUFhLENBQUMsc0JBQXNCLENBQUM7SUFDakVRLGFBQWEsRUFBRVQsUUFBUSxDQUFDQyxhQUFhLENBQUMsa0JBQWtCLENBQUM7SUFDekRTLFlBQVksRUFBRVYsUUFBUSxDQUFDQyxhQUFhLENBQUMsaUJBQWlCLENBQUM7SUFDdkRVLEtBQUssRUFBRVgsUUFBUSxDQUFDQyxhQUFhLENBQUMsdUJBQXVCLENBQUM7SUFDdERXLFNBQVMsRUFBRVosUUFBUSxDQUFDQyxhQUFhLENBQUMsMkJBQTJCO0VBQy9ELENBQUM7RUFDRFksUUFBUSxFQUFFYixRQUFRLENBQUNDLGFBQWEsQ0FBQyxZQUFZLENBQUM7RUFDOUNhLEtBQUssRUFBRTtJQUNMLENBQUMsRUFBRWQsUUFBUSxDQUFDQyxhQUFhLENBQUMsZUFBZSxDQUFDO0lBQzFDLENBQUMsRUFBRUQsUUFBUSxDQUFDQyxhQUFhLENBQUMsaUJBQWlCO0VBQzdDLENBQUM7RUFDRGMsVUFBVSxFQUFFO0lBQ1YsQ0FBQyxFQUFFZixRQUFRLENBQUNDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQztJQUM5QyxDQUFDLEVBQUVELFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLHFCQUFxQjtFQUNqRDtBQUNGLENBQUM7QUFFRCxpRUFBZUosUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvRE9NL0RPTUNhY2hlLmpzPzFiYTkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRE9NQ2FjaGUgPSB7XG4gIGdhbWVNYW5pcHVsYXRpb246IHtcbiAgICByZXN0YXJ0R2FtZUJ0bjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXN0YXJ0LWdhbWVfYnRuXCIpLFxuICAgIHJlc2V0U2NvcmVCdG46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVzZXQtc2NvcmVfYnRuXCIpLFxuICB9LFxuICB3aW5uZXI6IHtcbiAgICBtb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53aW5uZXItbW9kYWxcIiksXG4gICAgbWVzc2FnZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53aW5uZXItbWVzc2FnZVwiKSxcbiAgICBwbGF5QWdhaW5CdG46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxheS1hZ2Fpbl9idG5cIiksXG4gIH0sXG4gIHNoaXBQbGFjZW1lbnQ6IHtcbiAgICBtb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaGlwLXBsYWNlbWVudF9tb2RhbFwiKSxcbiAgICByZXNldFBsYWNlbWVudEJ0bjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXNldC1wbGFjZW1lbnRfYnRuXCIpLFxuICAgIHJvdGF0ZUF4aXNCdG46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucm90YXRlLWF4aXNfYnRuXCIpLFxuICAgIHN0YXJ0R2FtZUJ0bjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zdGFydC1nYW1lX2J0blwiKSxcbiAgICBzaGlwczogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaGlwLXBsYWNlbWVudF9zaGlwc1wiKSxcbiAgICBnYW1lQm9hcmQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2hpcC1wbGFjZW1lbnRfZ2FtZWJvYXJkXCIpLFxuICB9LFxuICB0dXJuSW5mbzogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50dXJuLWluZm9cIiksXG4gIHNjb3JlOiB7XG4gICAgMTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGF5ZXItc2NvcmVcIiksXG4gICAgMjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb21wdXRlci1zY29yZVwiKSxcbiAgfSxcbiAgZ2FtZUJvYXJkczoge1xuICAgIDE6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxheWVyLWdhbWVib2FyZFwiKSxcbiAgICAyOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbXB1dGVyLWdhbWVib2FyZFwiKSxcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERPTUNhY2hlO1xuIl0sIm5hbWVzIjpbIkRPTUNhY2hlIiwiZ2FtZU1hbmlwdWxhdGlvbiIsInJlc3RhcnRHYW1lQnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVzZXRTY29yZUJ0biIsIndpbm5lciIsIm1vZGFsIiwibWVzc2FnZSIsInBsYXlBZ2FpbkJ0biIsInNoaXBQbGFjZW1lbnQiLCJyZXNldFBsYWNlbWVudEJ0biIsInJvdGF0ZUF4aXNCdG4iLCJzdGFydEdhbWVCdG4iLCJzaGlwcyIsImdhbWVCb2FyZCIsInR1cm5JbmZvIiwic2NvcmUiLCJnYW1lQm9hcmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/DOM/DOMCache.js\n");

/***/ }),

/***/ "./src/DOM/DOMapp.js":
/*!***************************!*\
  !*** ./src/DOM/DOMapp.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DOMinit)\n/* harmony export */ });\n/* harmony import */ var _DOMapp_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOMapp.css */ \"./src/DOM/DOMapp.css\");\n/* harmony import */ var _controller_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controller/controller */ \"./src/controller/controller.js\");\n/* harmony import */ var _DOMCache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DOMCache */ \"./src/DOM/DOMCache.js\");\n/* harmony import */ var _shipPlacementModal_shipPlacementModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shipPlacementModal/shipPlacementModal */ \"./src/DOM/shipPlacementModal/shipPlacementModal.js\");\n\n\n\n\nconst gameController = new _controller_controller__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\nconst shipPlacementModal = {\n  setDependencies: _shipPlacementModal_shipPlacementModal__WEBPACK_IMPORTED_MODULE_3__.setDependencies,\n  open: _shipPlacementModal_shipPlacementModal__WEBPACK_IMPORTED_MODULE_3__.open\n};\nfunction DOMinit() {\n  gameController.newGameVsComputer();\n  shipPlacementModal.setDependencies({\n    DOMCache: _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].shipPlacement,\n    updateBoardsDOM,\n    updateBoardDOM,\n    createBoardDOM,\n    gameController\n  });\n  shipPlacementModal.open();\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.restartGameBtn.addEventListener(\"click\", restartGame);\n  enablePlayerActions();\n  if (isMobileMode()) changeButtonsBehavior();\n}\nfunction restartGame() {\n  gameController.restartGameVsComputer();\n  updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[1], document.createDocumentFragment());\n  updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2], document.createDocumentFragment());\n  shipPlacementModal.open();\n  enablePlayerActions();\n}\nasync function handleRound(e) {\n  if (!e.target.classList.contains(\"y-axis\")) return;\n  if (e.target.classList.contains(\"is-hit\")) return;\n  disablePlayerActions();\n  const playerMove = makePlayerMove(Number(e.target.parentElement.dataset.index), Number(e.target.dataset.index));\n  if (playerMove.isGameOver) {\n    increaseScore(1);\n    announceWinner(1);\n    return;\n  }\n  if (playerMove.hitShip) {\n    enablePlayerActions();\n    return;\n  }\n  const computerMove = await makeComputerMove();\n  if (computerMove.isGameOver) {\n    increaseScore(2);\n    announceWinner(2);\n    return;\n  }\n  enablePlayerActions();\n}\nfunction makePlayerMove(x, y) {\n  const playerMove = gameController.playPlayerRound({\n    x,\n    y\n  });\n  updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2], createBoardDOM(2, gameController.getGameBoard(2)));\n  return playerMove;\n}\nfunction makeComputerMove() {\n  return new Promise(resolve => {\n    setTimeout(resolve, Math.floor(Math.random() * (1500 - 1000 + 1)) + 1000);\n  }).then(() => {\n    const computerMove = gameController.playComputerRound();\n    updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[1], createBoardDOM(1, gameController.getGameBoard(1)));\n    if (computerMove.isGameOver) {\n      return computerMove;\n    }\n    if (computerMove.hitShip) return makeComputerMove();\n    return new Promise(resolve => {\n      setTimeout(resolve, 1000);\n    }).then(() => computerMove);\n  });\n}\nfunction updateBoardsDOM() {\n  updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[1], createBoardDOM(1, gameController.getGameBoard(1)));\n  updateBoardDOM(_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2], createBoardDOM(2, gameController.getGameBoard(2)));\n}\nfunction updateBoardDOM(oldBoardDOM, newBoardDOM) {\n  oldBoardDOM.replaceChildren(...newBoardDOM.children);\n}\nfunction createBoardDOM(player, board) {\n  const gameBoard = document.createDocumentFragment();\n  board.forEach((x, xIndex) => {\n    const xDOM = document.createElement(\"div\");\n    xDOM.classList.add(\"x-axis\");\n    xDOM.dataset.index = xIndex;\n    x.forEach((y, yIndex) => {\n      const yDOM = document.createElement(\"div\");\n      yDOM.classList.add(\"y-axis\");\n      yDOM.classList.add(\"square\");\n      yDOM.dataset.index = yIndex;\n      if (y.isHit) yDOM.classList.add(\"is-hit\");\n      if (y.isCollateralDamage) yDOM.classList.add(\"is-collateral-damage\");\n      if (player === 1 && y.ship) yDOM.classList.add(\"own-ship\");\n      if (y.ship && y.isHit) yDOM.classList.add(\"damaged-ship\");\n      if (y.ship && y.ship.isSunk()) yDOM.classList.add(\"sunk-ship\");\n      if (y.lastHit) yDOM.classList.add(\"last-hit\");\n      xDOM.appendChild(yDOM);\n    });\n    gameBoard.appendChild(xDOM);\n  });\n  return gameBoard;\n}\nfunction announceWinner(winner) {\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner.message.textContent = winner === 1 ? \"You won\" : \"Computer won\";\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner.modal.style.display = \"flex\";\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner.playAgainBtn.addEventListener(\"click\", playAgain, {\n    once: true\n  });\n}\nfunction playAgain() {\n  restartGame();\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner.message.textContent = \"\";\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].winner.modal.style.display = \"none\";\n}\nfunction resetScore() {\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.disabled = true;\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.removeEventListener(\"click\", resetScore);\n  gameController.resetScore();\n  updateScoreDOM(1, gameController.getPlayerScore(1));\n  updateScoreDOM(2, gameController.getPlayerScore(2));\n}\nfunction increaseScore(player) {\n  if (_DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.disabled) {\n    _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.removeAttribute(\"disabled\");\n    _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.addEventListener(\"click\", resetScore);\n  }\n  gameController.increaseScore(player);\n  updateScoreDOM(player, gameController.getPlayerScore(player));\n}\nfunction updateScoreDOM(player, newScore) {\n  const newScoreWrapper = document.createDocumentFragment();\n  for (let i = 0; i < newScore; i += 1) {\n    const scorePoint = document.createElement(\"div\");\n    scorePoint.classList.add(\"score-point\");\n    newScoreWrapper.appendChild(scorePoint);\n  }\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].score[player].replaceChildren(...newScoreWrapper.children);\n}\nfunction enablePlayerActions() {\n  const playerSide = _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].parentElement;\n  const computerSide = _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[1].parentElement;\n  computerSide.classList.replace(\"disabled\", \"enabled\");\n  playerSide.classList.replace(\"enabled\", \"disabled\");\n  computerSide.classList.replace(\"enabled\", \"disabled\");\n  playerSide.classList.replace(\"disabled\", \"enabled\");\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].addEventListener(\"click\", handleRound);\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].style.pointerEvents = \"auto\";\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.addEventListener(\"click\", resetScore);\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.restartGameBtn.addEventListener(\"click\", restartGame);\n}\nfunction disablePlayerActions() {\n  const playerSide = _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].parentElement;\n  const computerSide = _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[1].parentElement;\n  computerSide.classList.replace(\"disabled\", \"enabled\");\n  playerSide.classList.replace(\"enabled\", \"disabled\");\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].removeEventListener(\"click\", handleRound);\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameBoards[2].style.pointerEvents = \"none\";\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.resetScoreBtn.removeEventListener(\"click\", resetScore);\n  _DOMCache__WEBPACK_IMPORTED_MODULE_2__[\"default\"].gameManipulation.restartGameBtn.removeEventListener(\"click\", restartGame);\n}\nfunction isMobileMode() {\n  return window.matchMedia(\"(hover: none) and (pointer: coarse)\").matches || \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n}\nfunction changeButtonsBehavior() {\n  const appButtons = document.querySelectorAll(\"button\");\n  Array.from(appButtons).forEach(button => {\n    button.classList.add(\"mobile\");\n    button.addEventListener(\"click\", e => {\n      e.target.classList.add(\"clicked\");\n      setTimeout(() => {\n        e.target.classList.remove(\"clicked\");\n      }, 300);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cUNBQXFDLENBQUMsQ0FBQ0MsT0FBTyxJQUNoRSxjQUFjLElBQUlGLE1BQU0sSUFDeEJHLFNBQVMsQ0FBQ0MsY0FBYyxHQUFHLENBQUM7QUFFaEM7QUFFQSxTQUFTcEYscUJBQXFCQSxDQUFBLEVBQUc7RUFDL0IsTUFBTXFGLFVBQVUsR0FBR2xGLFFBQVEsQ0FBQ21GLGdCQUFnQixDQUFDLFFBQVEsQ0FBQztFQUV0REMsS0FBSyxDQUFDQyxJQUFJLENBQUNILFVBQVUsQ0FBQyxDQUFDM0MsT0FBTyxDQUFFK0MsTUFBTSxJQUFLO0lBQ3pDQSxNQUFNLENBQUNqRixTQUFTLENBQUNzQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQzlCMkMsTUFBTSxDQUFDN0YsZ0JBQWdCLENBQUMsT0FBTyxFQUFHVSxDQUFDLElBQUs7TUFDdENBLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxTQUFTLENBQUNzQyxHQUFHLENBQUMsU0FBUyxDQUFDO01BQ2pDakIsVUFBVSxDQUFDLE1BQU07UUFDZnZCLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxTQUFTLENBQUNrRixNQUFNLENBQUMsU0FBUyxDQUFDO01BQ3RDLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDVCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvRE9NL0RPTWFwcC5qcz9mNjViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vRE9NYXBwLmNzc1wiO1xuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4uL2NvbnRyb2xsZXIvY29udHJvbGxlclwiO1xuaW1wb3J0IERPTUNhY2hlIGZyb20gXCIuL0RPTUNhY2hlXCI7XG5pbXBvcnQgeyBzZXREZXBlbmRlbmNpZXMsIG9wZW4gfSBmcm9tIFwiLi9zaGlwUGxhY2VtZW50TW9kYWwvc2hpcFBsYWNlbWVudE1vZGFsXCI7XG5cbmNvbnN0IGdhbWVDb250cm9sbGVyID0gbmV3IENvbnRyb2xsZXIoKTtcbmNvbnN0IHNoaXBQbGFjZW1lbnRNb2RhbCA9IHsgc2V0RGVwZW5kZW5jaWVzLCBvcGVuIH07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERPTWluaXQoKSB7XG4gIGdhbWVDb250cm9sbGVyLm5ld0dhbWVWc0NvbXB1dGVyKCk7XG5cbiAgc2hpcFBsYWNlbWVudE1vZGFsLnNldERlcGVuZGVuY2llcyh7XG4gICAgRE9NQ2FjaGU6IERPTUNhY2hlLnNoaXBQbGFjZW1lbnQsXG4gICAgdXBkYXRlQm9hcmRzRE9NLFxuICAgIHVwZGF0ZUJvYXJkRE9NLFxuICAgIGNyZWF0ZUJvYXJkRE9NLFxuICAgIGdhbWVDb250cm9sbGVyLFxuICB9KTtcblxuICBzaGlwUGxhY2VtZW50TW9kYWwub3BlbigpO1xuXG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzdGFydEdhbWVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICBcImNsaWNrXCIsXG4gICAgcmVzdGFydEdhbWUsXG4gICk7XG5cbiAgZW5hYmxlUGxheWVyQWN0aW9ucygpO1xuXG4gIGlmIChpc01vYmlsZU1vZGUoKSkgY2hhbmdlQnV0dG9uc0JlaGF2aW9yKCk7XG59XG5cbmZ1bmN0aW9uIHJlc3RhcnRHYW1lKCkge1xuICBnYW1lQ29udHJvbGxlci5yZXN0YXJ0R2FtZVZzQ29tcHV0ZXIoKTtcblxuICB1cGRhdGVCb2FyZERPTShET01DYWNoZS5nYW1lQm9hcmRzWzFdLCBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO1xuICB1cGRhdGVCb2FyZERPTShET01DYWNoZS5nYW1lQm9hcmRzWzJdLCBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO1xuXG4gIHNoaXBQbGFjZW1lbnRNb2RhbC5vcGVuKCk7XG5cbiAgZW5hYmxlUGxheWVyQWN0aW9ucygpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVSb3VuZChlKSB7XG4gIGlmICghZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwieS1heGlzXCIpKSByZXR1cm47XG4gIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJpcy1oaXRcIikpIHJldHVybjtcblxuICBkaXNhYmxlUGxheWVyQWN0aW9ucygpO1xuXG4gIGNvbnN0IHBsYXllck1vdmUgPSBtYWtlUGxheWVyTW92ZShcbiAgICBOdW1iZXIoZS50YXJnZXQucGFyZW50RWxlbWVudC5kYXRhc2V0LmluZGV4KSxcbiAgICBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5pbmRleCksXG4gICk7XG5cbiAgaWYgKHBsYXllck1vdmUuaXNHYW1lT3Zlcikge1xuICAgIGluY3JlYXNlU2NvcmUoMSk7XG4gICAgYW5ub3VuY2VXaW5uZXIoMSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHBsYXllck1vdmUuaGl0U2hpcCkge1xuICAgIGVuYWJsZVBsYXllckFjdGlvbnMoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBjb21wdXRlck1vdmUgPSBhd2FpdCBtYWtlQ29tcHV0ZXJNb3ZlKCk7XG5cbiAgaWYgKGNvbXB1dGVyTW92ZS5pc0dhbWVPdmVyKSB7XG4gICAgaW5jcmVhc2VTY29yZSgyKTtcbiAgICBhbm5vdW5jZVdpbm5lcigyKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBlbmFibGVQbGF5ZXJBY3Rpb25zKCk7XG59XG5cbmZ1bmN0aW9uIG1ha2VQbGF5ZXJNb3ZlKHgsIHkpIHtcbiAgY29uc3QgcGxheWVyTW92ZSA9IGdhbWVDb250cm9sbGVyLnBsYXlQbGF5ZXJSb3VuZCh7IHgsIHkgfSk7XG5cbiAgdXBkYXRlQm9hcmRET00oXG4gICAgRE9NQ2FjaGUuZ2FtZUJvYXJkc1syXSxcbiAgICBjcmVhdGVCb2FyZERPTSgyLCBnYW1lQ29udHJvbGxlci5nZXRHYW1lQm9hcmQoMikpLFxuICApO1xuXG4gIHJldHVybiBwbGF5ZXJNb3ZlO1xufVxuXG5mdW5jdGlvbiBtYWtlQ29tcHV0ZXJNb3ZlKCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgxNTAwIC0gMTAwMCArIDEpKSArIDEwMDApO1xuICB9KS50aGVuKCgpID0+IHtcbiAgICBjb25zdCBjb21wdXRlck1vdmUgPSBnYW1lQ29udHJvbGxlci5wbGF5Q29tcHV0ZXJSb3VuZCgpO1xuXG4gICAgdXBkYXRlQm9hcmRET00oXG4gICAgICBET01DYWNoZS5nYW1lQm9hcmRzWzFdLFxuICAgICAgY3JlYXRlQm9hcmRET00oMSwgZ2FtZUNvbnRyb2xsZXIuZ2V0R2FtZUJvYXJkKDEpKSxcbiAgICApO1xuXG4gICAgaWYgKGNvbXB1dGVyTW92ZS5pc0dhbWVPdmVyKSB7XG4gICAgICByZXR1cm4gY29tcHV0ZXJNb3ZlO1xuICAgIH1cblxuICAgIGlmIChjb21wdXRlck1vdmUuaGl0U2hpcCkgcmV0dXJuIG1ha2VDb21wdXRlck1vdmUoKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKTtcbiAgICB9KS50aGVuKCgpID0+IGNvbXB1dGVyTW92ZSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVCb2FyZHNET00oKSB7XG4gIHVwZGF0ZUJvYXJkRE9NKFxuICAgIERPTUNhY2hlLmdhbWVCb2FyZHNbMV0sXG4gICAgY3JlYXRlQm9hcmRET00oMSwgZ2FtZUNvbnRyb2xsZXIuZ2V0R2FtZUJvYXJkKDEpKSxcbiAgKTtcblxuICB1cGRhdGVCb2FyZERPTShcbiAgICBET01DYWNoZS5nYW1lQm9hcmRzWzJdLFxuICAgIGNyZWF0ZUJvYXJkRE9NKDIsIGdhbWVDb250cm9sbGVyLmdldEdhbWVCb2FyZCgyKSksXG4gICk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUJvYXJkRE9NKG9sZEJvYXJkRE9NLCBuZXdCb2FyZERPTSkge1xuICBvbGRCb2FyZERPTS5yZXBsYWNlQ2hpbGRyZW4oLi4ubmV3Qm9hcmRET00uY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVCb2FyZERPTShwbGF5ZXIsIGJvYXJkKSB7XG4gIGNvbnN0IGdhbWVCb2FyZCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcblxuICBib2FyZC5mb3JFYWNoKCh4LCB4SW5kZXgpID0+IHtcbiAgICBjb25zdCB4RE9NID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB4RE9NLmNsYXNzTGlzdC5hZGQoXCJ4LWF4aXNcIik7XG4gICAgeERPTS5kYXRhc2V0LmluZGV4ID0geEluZGV4O1xuXG4gICAgeC5mb3JFYWNoKCh5LCB5SW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHlET00gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgeURPTS5jbGFzc0xpc3QuYWRkKFwieS1heGlzXCIpO1xuICAgICAgeURPTS5jbGFzc0xpc3QuYWRkKFwic3F1YXJlXCIpO1xuICAgICAgeURPTS5kYXRhc2V0LmluZGV4ID0geUluZGV4O1xuXG4gICAgICBpZiAoeS5pc0hpdCkgeURPTS5jbGFzc0xpc3QuYWRkKFwiaXMtaGl0XCIpO1xuICAgICAgaWYgKHkuaXNDb2xsYXRlcmFsRGFtYWdlKSB5RE9NLmNsYXNzTGlzdC5hZGQoXCJpcy1jb2xsYXRlcmFsLWRhbWFnZVwiKTtcbiAgICAgIGlmIChwbGF5ZXIgPT09IDEgJiYgeS5zaGlwKSB5RE9NLmNsYXNzTGlzdC5hZGQoXCJvd24tc2hpcFwiKTtcbiAgICAgIGlmICh5LnNoaXAgJiYgeS5pc0hpdCkgeURPTS5jbGFzc0xpc3QuYWRkKFwiZGFtYWdlZC1zaGlwXCIpO1xuICAgICAgaWYgKHkuc2hpcCAmJiB5LnNoaXAuaXNTdW5rKCkpIHlET00uY2xhc3NMaXN0LmFkZChcInN1bmstc2hpcFwiKTtcbiAgICAgIGlmICh5Lmxhc3RIaXQpIHlET00uY2xhc3NMaXN0LmFkZChcImxhc3QtaGl0XCIpO1xuXG4gICAgICB4RE9NLmFwcGVuZENoaWxkKHlET00pO1xuICAgIH0pO1xuXG4gICAgZ2FtZUJvYXJkLmFwcGVuZENoaWxkKHhET00pO1xuICB9KTtcblxuICByZXR1cm4gZ2FtZUJvYXJkO1xufVxuXG5mdW5jdGlvbiBhbm5vdW5jZVdpbm5lcih3aW5uZXIpIHtcbiAgRE9NQ2FjaGUud2lubmVyLm1lc3NhZ2UudGV4dENvbnRlbnQgPVxuICAgIHdpbm5lciA9PT0gMSA/IFwiWW91IHdvblwiIDogXCJDb21wdXRlciB3b25cIjtcbiAgRE9NQ2FjaGUud2lubmVyLm1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcblxuICBET01DYWNoZS53aW5uZXIucGxheUFnYWluQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBwbGF5QWdhaW4sIHtcbiAgICBvbmNlOiB0cnVlLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gcGxheUFnYWluKCkge1xuICByZXN0YXJ0R2FtZSgpO1xuICBET01DYWNoZS53aW5uZXIubWVzc2FnZS50ZXh0Q29udGVudCA9IFwiXCI7XG4gIERPTUNhY2hlLndpbm5lci5tb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG59XG5cbmZ1bmN0aW9uIHJlc2V0U2NvcmUoKSB7XG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzZXRTY29yZUJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzZXRTY29yZUJ0bi5yZW1vdmVFdmVudExpc3RlbmVyKFxuICAgIFwiY2xpY2tcIixcbiAgICByZXNldFNjb3JlLFxuICApO1xuXG4gIGdhbWVDb250cm9sbGVyLnJlc2V0U2NvcmUoKTtcbiAgdXBkYXRlU2NvcmVET00oMSwgZ2FtZUNvbnRyb2xsZXIuZ2V0UGxheWVyU2NvcmUoMSkpO1xuICB1cGRhdGVTY29yZURPTSgyLCBnYW1lQ29udHJvbGxlci5nZXRQbGF5ZXJTY29yZSgyKSk7XG59XG5cbmZ1bmN0aW9uIGluY3JlYXNlU2NvcmUocGxheWVyKSB7XG4gIGlmIChET01DYWNoZS5nYW1lTWFuaXB1bGF0aW9uLnJlc2V0U2NvcmVCdG4uZGlzYWJsZWQpIHtcbiAgICBET01DYWNoZS5nYW1lTWFuaXB1bGF0aW9uLnJlc2V0U2NvcmVCdG4ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgRE9NQ2FjaGUuZ2FtZU1hbmlwdWxhdGlvbi5yZXNldFNjb3JlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICByZXNldFNjb3JlLFxuICAgICk7XG4gIH1cblxuICBnYW1lQ29udHJvbGxlci5pbmNyZWFzZVNjb3JlKHBsYXllcik7XG4gIHVwZGF0ZVNjb3JlRE9NKHBsYXllciwgZ2FtZUNvbnRyb2xsZXIuZ2V0UGxheWVyU2NvcmUocGxheWVyKSk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNjb3JlRE9NKHBsYXllciwgbmV3U2NvcmUpIHtcbiAgY29uc3QgbmV3U2NvcmVXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld1Njb3JlOyBpICs9IDEpIHtcbiAgICBjb25zdCBzY29yZVBvaW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBzY29yZVBvaW50LmNsYXNzTGlzdC5hZGQoXCJzY29yZS1wb2ludFwiKTtcbiAgICBuZXdTY29yZVdyYXBwZXIuYXBwZW5kQ2hpbGQoc2NvcmVQb2ludCk7XG4gIH1cblxuICBET01DYWNoZS5zY29yZVtwbGF5ZXJdLnJlcGxhY2VDaGlsZHJlbiguLi5uZXdTY29yZVdyYXBwZXIuY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBlbmFibGVQbGF5ZXJBY3Rpb25zKCkge1xuICBjb25zdCBwbGF5ZXJTaWRlID0gRE9NQ2FjaGUuZ2FtZUJvYXJkc1syXS5wYXJlbnRFbGVtZW50O1xuICBjb25zdCBjb21wdXRlclNpZGUgPSBET01DYWNoZS5nYW1lQm9hcmRzWzFdLnBhcmVudEVsZW1lbnQ7XG4gIGNvbXB1dGVyU2lkZS5jbGFzc0xpc3QucmVwbGFjZShcImRpc2FibGVkXCIsIFwiZW5hYmxlZFwiKTtcbiAgcGxheWVyU2lkZS5jbGFzc0xpc3QucmVwbGFjZShcImVuYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTtcbiAgY29tcHV0ZXJTaWRlLmNsYXNzTGlzdC5yZXBsYWNlKFwiZW5hYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuICBwbGF5ZXJTaWRlLmNsYXNzTGlzdC5yZXBsYWNlKFwiZGlzYWJsZWRcIiwgXCJlbmFibGVkXCIpO1xuXG4gIERPTUNhY2hlLmdhbWVCb2FyZHNbMl0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZVJvdW5kKTtcbiAgRE9NQ2FjaGUuZ2FtZUJvYXJkc1syXS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJhdXRvXCI7XG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzZXRTY29yZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcmVzZXRTY29yZSk7XG5cbiAgRE9NQ2FjaGUuZ2FtZU1hbmlwdWxhdGlvbi5yZXN0YXJ0R2FtZUJ0bi5hZGRFdmVudExpc3RlbmVyKFxuICAgIFwiY2xpY2tcIixcbiAgICByZXN0YXJ0R2FtZSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gZGlzYWJsZVBsYXllckFjdGlvbnMoKSB7XG4gIGNvbnN0IHBsYXllclNpZGUgPSBET01DYWNoZS5nYW1lQm9hcmRzWzJdLnBhcmVudEVsZW1lbnQ7XG4gIGNvbnN0IGNvbXB1dGVyU2lkZSA9IERPTUNhY2hlLmdhbWVCb2FyZHNbMV0ucGFyZW50RWxlbWVudDtcbiAgY29tcHV0ZXJTaWRlLmNsYXNzTGlzdC5yZXBsYWNlKFwiZGlzYWJsZWRcIiwgXCJlbmFibGVkXCIpO1xuICBwbGF5ZXJTaWRlLmNsYXNzTGlzdC5yZXBsYWNlKFwiZW5hYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuXG4gIERPTUNhY2hlLmdhbWVCb2FyZHNbMl0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZVJvdW5kKTtcbiAgRE9NQ2FjaGUuZ2FtZUJvYXJkc1syXS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzZXRTY29yZUJ0bi5yZW1vdmVFdmVudExpc3RlbmVyKFxuICAgIFwiY2xpY2tcIixcbiAgICByZXNldFNjb3JlLFxuICApO1xuXG4gIERPTUNhY2hlLmdhbWVNYW5pcHVsYXRpb24ucmVzdGFydEdhbWVCdG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcbiAgICBcImNsaWNrXCIsXG4gICAgcmVzdGFydEdhbWUsXG4gICk7XG59XG5cbmZ1bmN0aW9uIGlzTW9iaWxlTW9kZSgpIHtcbiAgcmV0dXJuIChcbiAgICB3aW5kb3cubWF0Y2hNZWRpYShcIihob3Zlcjogbm9uZSkgYW5kIChwb2ludGVyOiBjb2Fyc2UpXCIpLm1hdGNoZXMgfHxcbiAgICBcIm9udG91Y2hzdGFydFwiIGluIHdpbmRvdyB8fFxuICAgIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDBcbiAgKTtcbn1cblxuZnVuY3Rpb24gY2hhbmdlQnV0dG9uc0JlaGF2aW9yKCkge1xuICBjb25zdCBhcHBCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImJ1dHRvblwiKTtcblxuICBBcnJheS5mcm9tKGFwcEJ1dHRvbnMpLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwibW9iaWxlXCIpO1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJjbGlja2VkXCIpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoXCJjbGlja2VkXCIpO1xuICAgICAgfSwgMzAwKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsiQ29udHJvbGxlciIsIkRPTUNhY2hlIiwic2V0RGVwZW5kZW5jaWVzIiwib3BlbiIsImdhbWVDb250cm9sbGVyIiwic2hpcFBsYWNlbWVudE1vZGFsIiwiRE9NaW5pdCIsIm5ld0dhbWVWc0NvbXB1dGVyIiwic2hpcFBsYWNlbWVudCIsInVwZGF0ZUJvYXJkc0RPTSIsInVwZGF0ZUJvYXJkRE9NIiwiY3JlYXRlQm9hcmRET00iLCJnYW1lTWFuaXB1bGF0aW9uIiwicmVzdGFydEdhbWVCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwicmVzdGFydEdhbWUiLCJlbmFibGVQbGF5ZXJBY3Rpb25zIiwiaXNNb2JpbGVNb2RlIiwiY2hhbmdlQnV0dG9uc0JlaGF2aW9yIiwicmVzdGFydEdhbWVWc0NvbXB1dGVyIiwiZ2FtZUJvYXJkcyIsImRvY3VtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImhhbmRsZVJvdW5kIiwiZSIsInRhcmdldCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiZGlzYWJsZVBsYXllckFjdGlvbnMiLCJwbGF5ZXJNb3ZlIiwibWFrZVBsYXllck1vdmUiLCJOdW1iZXIiLCJwYXJlbnRFbGVtZW50IiwiZGF0YXNldCIsImluZGV4IiwiaXNHYW1lT3ZlciIsImluY3JlYXNlU2NvcmUiLCJhbm5vdW5jZVdpbm5lciIsImhpdFNoaXAiLCJjb21wdXRlck1vdmUiLCJtYWtlQ29tcHV0ZXJNb3ZlIiwieCIsInkiLCJwbGF5UGxheWVyUm91bmQiLCJnZXRHYW1lQm9hcmQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ0aGVuIiwicGxheUNvbXB1dGVyUm91bmQiLCJvbGRCb2FyZERPTSIsIm5ld0JvYXJkRE9NIiwicmVwbGFjZUNoaWxkcmVuIiwiY2hpbGRyZW4iLCJwbGF5ZXIiLCJib2FyZCIsImdhbWVCb2FyZCIsImZvckVhY2giLCJ4SW5kZXgiLCJ4RE9NIiwiY3JlYXRlRWxlbWVudCIsImFkZCIsInlJbmRleCIsInlET00iLCJpc0hpdCIsImlzQ29sbGF0ZXJhbERhbWFnZSIsInNoaXAiLCJpc1N1bmsiLCJsYXN0SGl0IiwiYXBwZW5kQ2hpbGQiLCJ3aW5uZXIiLCJtZXNzYWdlIiwidGV4dENvbnRlbnQiLCJtb2RhbCIsInN0eWxlIiwiZGlzcGxheSIsInBsYXlBZ2FpbkJ0biIsInBsYXlBZ2FpbiIsIm9uY2UiLCJyZXNldFNjb3JlIiwicmVzZXRTY29yZUJ0biIsImRpc2FibGVkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInVwZGF0ZVNjb3JlRE9NIiwiZ2V0UGxheWVyU2NvcmUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJuZXdTY29yZSIsIm5ld1Njb3JlV3JhcHBlciIsImkiLCJzY29yZVBvaW50Iiwic2NvcmUiLCJwbGF5ZXJTaWRlIiwiY29tcHV0ZXJTaWRlIiwicmVwbGFjZSIsInBvaW50ZXJFdmVudHMiLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsIm5hdmlnYXRvciIsIm1heFRvdWNoUG9pbnRzIiwiYXBwQnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJidXR0b24iLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/DOM/DOMapp.js\n");

/***/ }),

/***/ "./src/DOM/shipPlacementModal/shipPlacementModal.js":
/*!**********************************************************!*\
  !*** ./src/DOM/shipPlacementModal/shipPlacementModal.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   open: () => (/* binding */ open),\n/* harmony export */   setDependencies: () => (/* binding */ setDependencies)\n/* harmony export */ });\n/* harmony import */ var _shipPlacementModal_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shipPlacementModal.css */ \"./src/DOM/shipPlacementModal/shipPlacementModal.css\");\n\nconst dependencies = {};\nconst current = {\n  shipsOnCoordinate: []\n};\nfunction setDependencies(moduleDependencies) {\n  Object.assign(dependencies, moduleDependencies);\n}\nfunction open() {\n  const DOMShips = createDOMShips([{\n    id: \"destroyer\",\n    length: 2\n  }, {\n    id: \"submarine\",\n    length: 3\n  }, {\n    id: \"cruiser\",\n    length: 3\n  }, {\n    id: \"battleship\",\n    length: 4\n  }, {\n    id: \"carrier\",\n    length: 5\n  }]);\n  dependencies.DOMCache.ships.replaceChildren(...DOMShips.children);\n  dependencies.DOMCache.rotateAxisBtn.addEventListener(\"click\", rotateAxis);\n  dependencies.DOMCache.ships.addEventListener(\"pointerdown\", pickDOMShip);\n  dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, dependencies.createBoardDOM(1, dependencies.gameController.getGameBoard(1)));\n  window.addEventListener(\"resize\", resetPlacement);\n  dependencies.DOMCache.modal.style.display = \"initial\";\n}\nfunction close() {\n  dependencies.DOMCache.ships.replaceChildren(document.createDocumentFragment());\n  dependencies.DOMCache.resetPlacementBtn.removeEventListener(\"click\", resetPlacement);\n  dependencies.DOMCache.rotateAxisBtn.removeEventListener(\"click\", rotateAxis);\n  dependencies.DOMCache.ships.removeEventListener(\"pointerdown\", pickDOMShip);\n  disableStartGameBtn();\n  disableResetPlacementBtn();\n  if (dependencies.DOMCache.ships.dataset.axis === \"y\") {\n    dependencies.DOMCache.rotateAxisBtn.firstElementChild.textContent = \"x\";\n    dependencies.DOMCache.ships.dataset.axis = \"x\";\n    dependencies.DOMCache.ships.classList.replace(\"rotate-y\", \"rotate-x\");\n  }\n  dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, document.createDocumentFragment());\n  window.removeEventListener(\"resize\", resetPlacement);\n  dependencies.DOMCache.modal.style.display = \"none\";\n  dependencies.updateBoardsDOM();\n}\nfunction resetPlacement() {\n  dependencies.gameController.resetBoard(1);\n  dependencies.gameController.deleteShips(1);\n  dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, dependencies.createBoardDOM(1, dependencies.gameController.getGameBoard(1)));\n  Array.from(dependencies.DOMCache.ships.children).forEach(ship => {\n    resetDOMShipPosition(ship.firstElementChild);\n  });\n  disableResetPlacementBtn();\n  disableStartGameBtn();\n}\nfunction rotateAxis() {\n  const shipsWrapper = dependencies.DOMCache.ships;\n  const oldAxis = shipsWrapper.dataset.axis;\n  if (shipsWrapper.dataset.axis === \"x\") {\n    shipsWrapper.dataset.axis = \"y\";\n    this.firstElementChild.textContent = \"y\";\n  } else if (shipsWrapper.dataset.axis === \"y\") {\n    shipsWrapper.dataset.axis = \"x\";\n    this.firstElementChild.textContent = \"x\";\n  }\n  shipsWrapper.classList.replace(`rotate-${oldAxis}`, `rotate-${shipsWrapper.dataset.axis}`);\n  Array.from(shipsWrapper.children).forEach(shipWrapper => {\n    const ship = shipWrapper.firstElementChild;\n    if (!ship.classList.contains(\"on-coordinate\")) {\n      changeDOMShipAxis(ship, shipsWrapper.dataset.axis);\n    }\n    shipWrapper.classList.replace(`rotate-${oldAxis}`, `rotate-${shipsWrapper.dataset.axis}`);\n  });\n}\nfunction createDOMShips(ships) {\n  const DOMShips = document.createDocumentFragment();\n  ships.forEach(ship => {\n    const DOMShipWrapper = document.createElement(\"div\");\n    DOMShipWrapper.classList.add(\"placement-ship_wrapper\");\n    DOMShipWrapper.classList.add(`holds-${ship.id}`);\n    DOMShipWrapper.classList.add(\"rotate-x\");\n    const DOMShip = document.createElement(\"div\");\n    DOMShip.id = ship.id;\n    DOMShip.classList.add(\"placement-ship\");\n    DOMShip.classList.add(\"rotate-x\");\n    DOMShip.dataset.length = ship.length;\n    DOMShip.dataset.axis = \"x\";\n    DOMShip.textContent = ship.id;\n    DOMShipWrapper.appendChild(DOMShip);\n    DOMShips.appendChild(DOMShipWrapper);\n  });\n  return DOMShips;\n}\nfunction pickDOMShip(e) {\n  const ship = e.target.closest(\".placement-ship\");\n  if (!ship) return;\n  current.ship = ship;\n  current.ship.setPointerCapture(e.pointerId);\n  current.ship.addEventListener(\"pointermove\", dragDOMShip);\n  current.ship.addEventListener(\"pointerup\", dropDOMShip);\n  current.shipInfo = current.ship.getBoundingClientRect();\n  if (dependencies.gameController.hasShip(1, current.ship.id)) {\n    dependencies.gameController.removeShip(1, current.ship.id);\n    dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, dependencies.createBoardDOM(1, dependencies.gameController.getGameBoard(1)));\n  }\n  disableStartGameBtn();\n}\nfunction dragDOMShip(e) {\n  current.ship.setPointerCapture(e.pointerId);\n  current.ship.classList.add(\"being-dragged\");\n  current.ship.style.position = \"absolute\";\n  current.ship.style.left = `${e.clientX - current.shipInfo.width / 2}px`;\n  current.ship.style.top = `${e.clientY - current.shipInfo.height / 3}px`;\n  current.ship.style.zIndex = \"101\";\n  dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, dependencies.createBoardDOM(1, dependencies.gameController.getGameBoard(1)));\n  current.placement = checkPlacement({\n    x: current.ship.dataset.axis === \"x\" ? e.clientX - current.shipInfo.width / 2.5 : e.clientX,\n    y: current.ship.dataset.axis === \"y\" ? e.clientY - current.shipInfo.height / 4 : e.clientY,\n    axis: current.ship.dataset.axis,\n    length: current.ship.dataset.length,\n    id: current.ship.id\n  });\n  if (current.placement.isValid) {\n    const hoverableSquares = getHoverableSquares({\n      x: current.placement.internalCoordinates.x,\n      y: current.placement.internalCoordinates.y,\n      length: current.placement.internalCoordinates.length,\n      axis: current.placement.internalCoordinates.axis\n    });\n    hoverableSquares.forEach(square => {\n      square.classList.add(\"hover\");\n    });\n  }\n}\nfunction dropDOMShip(e) {\n  current.ship.releasePointerCapture(e.pointerId);\n  current.ship.removeEventListener(\"pointermove\", dragDOMShip);\n  current.ship.removeEventListener(\"pointerup\", dropDOMShip);\n  current.ship.classList.remove(\"being-dragged\");\n  if (!current.placement || !current.placement.isValid) {\n    resetDOMShipPosition(current.ship);\n    if (current.shipsOnCoordinate.length === 0) disableResetPlacementBtn();\n    return;\n  }\n  const snapToGridCoords = getSquareUnderCoords({\n    x: current.ship.dataset.axis === \"x\" ? e.clientX - current.shipInfo.width / 2.5 : e.clientX,\n    y: current.ship.dataset.axis === \"y\" ? e.clientY - current.shipInfo.height / 4 : e.clientY\n  }).getBoundingClientRect();\n  current.shipsOnCoordinate.push(current.ship);\n  current.ship.style.left = `${snapToGridCoords.x}px`;\n  current.ship.style.top = `${snapToGridCoords.y}px`;\n  current.ship.classList.add(\"on-coordinate\");\n  current.ship.style.zIndex = \"100\";\n  dependencies.gameController.placeShip(1, current.placement.internalCoordinates);\n  dependencies.updateBoardDOM(dependencies.DOMCache.gameBoard, dependencies.createBoardDOM(1, dependencies.gameController.getGameBoard(1)));\n  delete current.placement;\n  if (dependencies.gameController.hasEnoughShips(1)) enableStartGameBtn();\n  enableResetPlacementBtn();\n}\nfunction enableResetPlacementBtn() {\n  dependencies.DOMCache.resetPlacementBtn.addEventListener(\"click\", resetPlacement);\n  dependencies.DOMCache.resetPlacementBtn.removeAttribute(\"disabled\");\n}\nfunction disableResetPlacementBtn() {\n  dependencies.DOMCache.resetPlacementBtn.removeEventListener(\"click\", resetPlacement);\n  dependencies.DOMCache.resetPlacementBtn.disabled = true;\n}\nfunction resetDOMShipPosition(ship) {\n  const shipIndex = current.shipsOnCoordinate.findIndex(_ => _.id === ship.id);\n  if (shipIndex >= 0) {\n    current.shipsOnCoordinate.splice(shipIndex, 1);\n  }\n  ship.style.removeProperty(\"position\");\n  ship.style.removeProperty(\"left\");\n  ship.style.removeProperty(\"top\");\n  if (ship.classList.contains(\"on-coordinate\")) {\n    ship.classList.remove(\"on-coordinate\");\n  }\n  if (ship.dataset.axis !== dependencies.DOMCache.ships.dataset.axis) {\n    changeDOMShipAxis(ship, dependencies.DOMCache.ships.dataset.axis);\n  }\n}\nfunction changeDOMShipAxis(ship, newAxis) {\n  const oldShipAxis = ship.dataset.axis;\n  ship.dataset.axis = newAxis;\n  ship.classList.replace(`rotate-${oldShipAxis}`, `rotate-${ship.dataset.axis}`);\n}\nfunction checkPlacement(DOMCoordinates) {\n  const location = getSquareUnderCoords({\n    x: DOMCoordinates.x,\n    y: DOMCoordinates.y\n  });\n  if (!location) {\n    return {\n      isValid: false\n    };\n  }\n  const internalCoordinates = {\n    x: Number(location.parentElement.dataset.index),\n    y: Number(location.dataset.index),\n    axis: DOMCoordinates.axis,\n    length: Number(DOMCoordinates.length),\n    id: DOMCoordinates.id\n  };\n  const isValidPlacement = dependencies.gameController.isValidPlacement(1, internalCoordinates);\n  if (isValidPlacement) {\n    return {\n      isValid: true,\n      internalCoordinates\n    };\n  }\n  return {\n    isValid: false\n  };\n}\nfunction getHoverableSquares(coordinates) {\n  const {\n    x,\n    y,\n    length,\n    axis\n  } = coordinates;\n  const {\n    gameBoard\n  } = dependencies.DOMCache;\n  const hoverableSquares = [];\n  if (axis === \"x\") {\n    const xAxis = gameBoard.querySelector(`.x-axis[data-index=\"${x}\"]`);\n    for (let i = 0; i < length; i += 1) {\n      const DOMSquare = xAxis.querySelector(`[data-index=\"${y + i}\"]`);\n      if (DOMSquare) hoverableSquares.push(DOMSquare);\n    }\n  }\n  if (axis === \"y\") {\n    for (let i = 0; i < length; i += 1) {\n      const xAxis = gameBoard.querySelector(`.x-axis[data-index=\"${x + i}\"]`);\n      const DOMSquare = xAxis.querySelector(`[data-index=\"${y}\"]`);\n      if (DOMSquare) hoverableSquares.push(DOMSquare);\n    }\n  }\n  return hoverableSquares;\n}\nfunction getSquareUnderCoords(coordinates) {\n  return document.elementsFromPoint(coordinates.x, coordinates.y).find(element => element.classList.contains(\"square\"));\n}\nfunction disableStartGameBtn() {\n  dependencies.DOMCache.startGameBtn.removeEventListener(\"click\", close);\n  dependencies.DOMCache.startGameBtn.setAttribute(\"disabled\", \"true\");\n}\nfunction enableStartGameBtn() {\n  dependencies.DOMCache.startGameBtn.addEventListener(\"click\", close);\n  dependencies.DOMCache.startGameBtn.removeAttribute(\"disabled\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/DOM/shipPlacementModal/shipPlacementModal.js\n");

/***/ }),

/***/ "./src/controller/controller.js":
/*!**************************************!*\
  !*** ./src/controller/controller.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Controller)\n/* harmony export */ });\n/* harmony import */ var _ship_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ship/ship */ \"./src/ship/ship.js\");\n/* harmony import */ var _gameboard_gameboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gameboard/gameboard */ \"./src/gameboard/gameboard.js\");\n/* harmony import */ var _player_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../player/player */ \"./src/player/player.js\");\n/* harmony import */ var _player_computer_computer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../player/computer/computer */ \"./src/player/computer/computer.js\");\n\n\n\n\nclass Controller {\n  #players = {};\n  static createGameBoard() {\n    const board = new _gameboard_gameboard__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    board.createBoard();\n    return board;\n  }\n  getGameBoard(player) {\n    return this.#players[player].gameBoard.board;\n  }\n  static createShip(length) {\n    let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const ship = new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](length, id);\n    return ship;\n  }\n  createPlayerAndComputer() {\n    this.#players[1] = new _player_player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](Controller.createGameBoard());\n    this.#players[2] = new _player_computer_computer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](Controller.createGameBoard());\n  }\n  get players() {\n    return this.#players;\n  }\n  getPlayerScore(player) {\n    return this.#players[player].score;\n  }\n  placeShip(player, options) {\n    const ship = Controller.createShip(options.length, options.id);\n    this.#players[player].gameBoard.placeShip(ship, options);\n  }\n  hasEnoughShips(player) {\n    return this.#players[player].gameBoard.ships.length === 5;\n  }\n  hasShip(player, id) {\n    return this.#players[player].gameBoard.hasShip(id);\n  }\n  removeShip(player, id) {\n    this.#players[player].gameBoard.removeShip(id);\n  }\n  isValidPlacement(player, coordinates) {\n    return this.#players[player].gameBoard.isValidPlacement(coordinates);\n  }\n  placeComputerShips() {\n    if (Object.getPrototypeOf(this.#players[2]) !== _player_computer_computer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype) {\n      throw new TypeError(\"The second player is not a Computer. Only Computer players can randomly place their ships\");\n    }\n    const ships = [new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2, \"destroyer\"), new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](3, \"submarine\"), new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](3, \"cruiser\"), new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](4, \"battleship\"), new _ship_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](5, \"carrier\")];\n    this.#players[2].placeShips(ships);\n  }\n  sendAttack(player, coordinates) {\n    return this.#players[player].gameBoard.receiveAttack(coordinates);\n  }\n  generateComputerAttack(enemyBoard) {\n    return this.#players[2].generateAttackCoordinates(enemyBoard);\n  }\n  isGameOver() {\n    if (this.#players[1].gameBoard.isGameOver() || this.#players[2].gameBoard.isGameOver()) {\n      return true;\n    }\n    return false;\n  }\n  increaseScore(player) {\n    this.#players[player].increaseScore();\n  }\n  playPlayerRound(coordinates) {\n    if (this.isGameOver()) {\n      throw new Error(\"Trying to play a round when the game is already over. The game can only be played if both players have at least one ship that is not sunk\");\n    }\n    return {\n      ...this.sendAttack(2, coordinates),\n      isGameOver: this.isGameOver()\n    };\n  }\n  playComputerRound() {\n    if (this.isGameOver()) {\n      throw new Error(\"Trying to play a round when the game is already over. The game can only be played if both players have at least one ship that is not sunk\");\n    }\n    const computerAttack = this.generateComputerAttack(this.getGameBoard(1));\n    this.sendAttack(1, computerAttack);\n    return {\n      hitShip: !!this.getGameBoard(1)[computerAttack.x][computerAttack.y].ship,\n      isGameOver: this.isGameOver()\n    };\n  }\n  newGameVsComputer() {\n    this.createPlayerAndComputer();\n    this.placeComputerShips();\n  }\n  resetBoard(player) {\n    this.players[player].gameBoard.resetBoard();\n  }\n  deleteShips(player) {\n    this.players[player].gameBoard.deleteShips();\n  }\n  restartGame() {\n    this.resetBoard(1);\n    this.resetBoard(2);\n    this.deleteShips(1);\n    this.deleteShips(2);\n  }\n  restartGameVsComputer() {\n    this.restartGame();\n    this.placeComputerShips();\n  }\n  resetScore() {\n    this.players[1].resetScore();\n    this.players[2].resetScore();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/controller/controller.js\n");

/***/ }),

/***/ "./src/gameboard/gameboard.js":
/*!************************************!*\
  !*** ./src/gameboard/gameboard.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameBoard)\n/* harmony export */ });\nclass GameBoard {\n  #board = [];\n  #ships = [];\n  get board() {\n    return this.#board;\n  }\n  get ships() {\n    return this.#ships;\n  }\n  createBoard() {\n    for (let i = 0; i < 10; i += 1) {\n      const x = [];\n      for (let j = 0; j < 10; j += 1) {\n        x.push({\n          isHit: false\n        });\n      }\n      this.#board.push(x);\n    }\n  }\n  resetBoard() {\n    this.#board = [];\n    this.createBoard();\n  }\n  isValidPlacement(options) {\n    if (GameBoard.#isOutOfBounds(options)) return false;\n    if (this.#overlapsExistingShips(options)) return false;\n    return true;\n  }\n  placeShip(ship, options) {\n    if (this.#ships.length >= 5) {\n      throw new RangeError(\"Attempting to place more than 5 ships on the gameBoard. GameBoard must have exactly 5 ships\");\n    }\n    if (GameBoard.#isOutOfBounds(options)) {\n      throw new RangeError(\"Ship coordinates are out of bounds\");\n    }\n    if (this.#overlapsExistingShips(options)) {\n      throw new RangeError(\"Ship coordinates overlap existing ships\");\n    }\n    const {\n      x,\n      y,\n      axis,\n      length\n    } = options;\n    this.#ships.push({\n      shipInstance: ship,\n      shipCoordinates: options\n    });\n    for (let i = 0; i < length; i += 1) {\n      if (axis === \"x\") {\n        this.#board[x][y + i].ship = ship;\n      } else if (axis === \"y\") {\n        this.#board[x + i][y].ship = ship;\n      }\n    }\n  }\n  hasShip(id) {\n    const ship = this.#ships.find(_ => _.shipInstance.id === id);\n    if (ship) return true;\n    return false;\n  }\n  removeShip(id) {\n    const ship = this.#ships.find(_ => _.shipInstance.id === id);\n    if (!ship) {\n      throw new RangeError(\"Attempting to remove a ship that does not exist. The passed id must match the id of an existing ship\");\n    }\n    this.#ships.splice(this.#ships.indexOf(ship), 1);\n    this.#board.forEach(x => {\n      x.forEach(y => {\n        if (y.ship && y.ship.id === id) delete y.ship;\n      });\n    });\n  }\n  deleteShips() {\n    this.#ships = [];\n  }\n  receiveAttack(coordinates) {\n    const {\n      x,\n      y\n    } = coordinates;\n    if (x > 10 || x < 0 || y > 10 || y < 0) {\n      throw new RangeError(\"Attempting to hit a coordinate that is out of bounds\");\n    }\n    if (this.#board[x][y].isHit) {\n      return console.warn(\"Attempting to hit a coordinate multiple times. The coordinate has already been hit. No actions were taken\");\n    }\n    this.#board[x][y].isHit = true;\n    if (this.#board[x][y].ship) {\n      this.#board[x][y].ship.hit();\n      this.hitAdjacentDiagonalSquares(x, y);\n      if (this.#board[x][y].ship.isSunk()) {\n        const {\n          shipCoordinates\n        } = this.#ships.find(ship => ship.shipInstance.id === this.#board[x][y].ship.id);\n        this.hitAdjacentSquares(shipCoordinates);\n      }\n    }\n    this.updateLastHit({\n      x,\n      y\n    });\n    return {\n      hitShip: !!this.board[coordinates.x][coordinates.y].ship\n    };\n  }\n  hitAdjacentDiagonalSquares(x, y) {\n    const directions = [{\n      x: x - 1,\n      y: y - 1\n    }, {\n      x: x - 1,\n      y: y + 1\n    }, {\n      x: x + 1,\n      y: y - 1\n    }, {\n      x: x + 1,\n      y: y + 1\n    }];\n    directions.forEach(direction => {\n      if (this.#board[direction.x] && this.#board[direction.x][direction.y]) {\n        this.#board[direction.x][direction.y].isHit = true;\n        this.#board[direction.x][direction.y].isCollateralDamage = true;\n      }\n    });\n  }\n  hitAdjacentSquares(options) {\n    const {\n      x,\n      y,\n      axis,\n      length\n    } = options;\n    const findSquare = coordinates => {\n      const x = this.#board[coordinates.x];\n      if (!x) return false;\n      const y = x[coordinates.y];\n      if (!y) return false;\n      return y;\n    };\n    const hit = location => {\n      if (location.isHit) return;\n      location.isHit = true;\n      location.isCollateralDamage = true;\n    };\n    const hitOnX = () => {\n      const paddedY = y - 1;\n      const paddedLength = y + length <= this.#board[x].length ? length + 1 : length;\n      for (let i = 0; i <= paddedLength; i += 1) {\n        const previousX = findSquare({\n          x: x - 1,\n          y: paddedY + i\n        });\n        const currentX = findSquare({\n          x,\n          y: paddedY + i\n        });\n        const nextX = findSquare({\n          x: x + 1,\n          y: paddedY + i\n        });\n        if (previousX) hit(previousX);\n        if (currentX) hit(currentX);\n        if (nextX) hit(nextX);\n      }\n    };\n    const hitOnY = () => {\n      const paddedX = x - 1;\n      const paddedLength = x + length <= this.#board.length ? length + 1 : length;\n      for (let i = 0; i <= paddedLength; i += 1) {\n        const previousY = findSquare({\n          x: paddedX + i,\n          y: y - 1\n        });\n        const currentY = findSquare({\n          x: paddedX + i,\n          y\n        });\n        const nextY = findSquare({\n          x: paddedX + i,\n          y: y + 1\n        });\n        if (previousY) hit(previousY);\n        if (currentY) hit(currentY);\n        if (nextY) hit(nextY);\n      }\n    };\n    if (axis === \"x\") {\n      return hitOnX();\n    }\n    return hitOnY();\n  }\n  updateLastHit(coordinates) {\n    this.#board.forEach(x => {\n      x.forEach(y => {\n        if (y.lastHit) delete y.lastHit;\n      });\n    });\n    this.#board[coordinates.x][coordinates.y].lastHit = true;\n  }\n  isGameOver() {\n    const livingShip = this.#ships.find(ship => ship.shipInstance.isSunk() === false);\n    if (livingShip) return false;\n    return true;\n  }\n  static #isOutOfBounds(options) {\n    const {\n      x,\n      y,\n      axis,\n      length\n    } = options;\n    if (axis === \"x\" && y + length > 10) return true;\n    if (axis === \"y\" && x + length > 10) return true;\n    return false;\n  }\n  #overlapsExistingShips(options) {\n    const {\n      x,\n      y,\n      axis,\n      length\n    } = options;\n    const findShip = coordinates => {\n      const x = this.#board[coordinates.x];\n      if (!x) return false;\n      const y = x[coordinates.y];\n      if (!y) return false;\n      return y.ship;\n    };\n    const overlapsOnX = () => {\n      const paddedY = y - 1;\n      const paddedLength = y + length <= this.#board[x].length ? length + 1 : length;\n      for (let i = 0; i <= paddedLength; i += 1) {\n        if (findShip({\n          x: x - 1,\n          y: paddedY + i\n        })) return true;\n        if (findShip({\n          x,\n          y: paddedY + i\n        })) return true;\n        if (findShip({\n          x: x + 1,\n          y: paddedY + i\n        })) return true;\n      }\n      return false;\n    };\n    const overlapsOnY = () => {\n      const paddedX = x - 1;\n      const paddedLength = x + length <= this.#board.length ? length + 1 : length;\n      for (let i = 0; i <= paddedLength; i += 1) {\n        if (findShip({\n          x: paddedX + i,\n          y: y - 1\n        })) return true;\n        if (findShip({\n          x: paddedX + i,\n          y\n        })) return true;\n        if (findShip({\n          x: paddedX + i,\n          y: y + 1\n        })) return true;\n      }\n      return false;\n    };\n    if (axis === \"x\") {\n      return overlapsOnX();\n    }\n    return overlapsOnY();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/gameboard/gameboard.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DOM_DOMapp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM/DOMapp */ \"./src/DOM/DOMapp.js\");\n\n(0,_DOM_DOMapp__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBbUM7QUFFbkNBLHVEQUFPLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRE9NaW5pdCBmcm9tIFwiLi9ET00vRE9NYXBwXCI7XG5cbkRPTWluaXQoKTtcbiJdLCJuYW1lcyI6WyJET01pbml0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/player/computer/computer.js":
/*!*****************************************!*\
  !*** ./src/player/computer/computer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Computer)\n/* harmony export */ });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../player */ \"./src/player/player.js\");\n\nclass Computer extends _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  #lastMove;\n  #moves = [];\n  #focusingShip;\n  placeShips(ships) {\n    const generateCoordinates = () => ({\n      x: Math.floor(Math.random() * 10),\n      y: Math.floor(Math.random() * 10),\n      axis: Math.floor(Math.random() * 10) < 4 ? \"x\" : \"y\"\n    });\n    const randomlyPlaceShip = ship => {\n      try {\n        this.gameBoard.placeShip(ship, {\n          ...generateCoordinates(),\n          length: ship.length\n        });\n      } catch {\n        randomlyPlaceShip(ship);\n      }\n    };\n    ships.forEach(ship => {\n      randomlyPlaceShip(ship);\n    });\n  }\n  static #generateRandomX(gameBoard) {\n    const availableXs = [];\n    gameBoard.forEach((x, index) => {\n      if (x.some(y => !y.isHit)) availableXs.push(index);\n    });\n    if (availableXs.length === 0) {\n      throw new RangeError(\"Attempting to generate an attack for a full gameBoard. gameBoard must have at least one free spot in order for a valid coordinate to be generated.\");\n    }\n    return availableXs[Math.floor(Math.random() * availableXs.length)];\n  }\n  static #generateRandomY(gameBoard, x) {\n    const availableYs = [];\n    gameBoard[x].forEach((y, index) => {\n      if (!y.isHit) availableYs.push(index);\n    });\n    return availableYs[Math.floor(Math.random() * availableYs.length)];\n  }\n  static generateRandomAttack(gameBoard) {\n    const randomX = Computer.#generateRandomX(gameBoard);\n    const randomY = Computer.#generateRandomY(gameBoard, randomX);\n    return {\n      x: randomX,\n      y: randomY\n    };\n  }\n  static #generateRandomAdjacentX(gameBoard, x, y) {\n    const availableXs = [];\n    if (gameBoard[x - 1] && gameBoard[x - 1][y] && !gameBoard[x - 1][y].isHit) {\n      availableXs.push(x - 1);\n    }\n    if (gameBoard[x + 1] && gameBoard[x + 1][y] && !gameBoard[x + 1][y].isHit) {\n      availableXs.push(x + 1);\n    }\n    if (availableXs.length > 1) {\n      return {\n        x: availableXs[Math.random() < 0.5 ? 0 : 1],\n        y\n      };\n    }\n    if (availableXs.length === 1) {\n      return {\n        x: availableXs[0],\n        y\n      };\n    }\n    return false;\n  }\n  static #generateRandomAdjacentY(gameBoard, x, y) {\n    const availableYs = [];\n    if (gameBoard[x] && gameBoard[x][y - 1] && !gameBoard[x][y - 1].isHit) {\n      availableYs.push(y - 1);\n    }\n    if (gameBoard[x] && gameBoard[x][y + 1] && !gameBoard[x][y + 1].isHit) {\n      availableYs.push(y + 1);\n    }\n    if (availableYs.length > 1) {\n      return {\n        x,\n        y: availableYs[Math.random() < 0.5 ? 0 : 1]\n      };\n    }\n    if (availableYs.length === 1) {\n      return {\n        x,\n        y: availableYs[0]\n      };\n    }\n    return false;\n  }\n  #generatePreciseAttack(gameBoard) {\n    const firstHit = this.#moves.find(move => move.firstHit === true);\n    const lastMove = this.#moves[this.#moves.length - 1];\n    if (gameBoard[lastMove.x][lastMove.y].ship) {\n      lastMove.hitShip = true;\n    }\n    const hits = this.#moves.filter(move => move.hitShip === true);\n    const adjacentCoordinateGenerators = [Computer.#generateRandomAdjacentX, Computer.#generateRandomAdjacentY];\n    if (hits.length < 2) {\n      let randomAdjacentCoords;\n      while (!randomAdjacentCoords) {\n        randomAdjacentCoords = adjacentCoordinateGenerators[Math.random() < 0.5 ? 0 : 1](gameBoard, firstHit.x, firstHit.y);\n      }\n      this.#moves.push(randomAdjacentCoords);\n      return randomAdjacentCoords;\n    }\n    const generatePreciseAdjacentMove = callback => {\n      const initialDirection = callback(gameBoard, hits[hits.length - 1].x, hits[hits.length - 1].y);\n      if (initialDirection) {\n        this.#moves.push(initialDirection);\n        return initialDirection;\n      }\n      const reversedDirection = callback(gameBoard, hits[0].x, hits[0].y);\n      this.#moves.push(reversedDirection);\n      return reversedDirection;\n    };\n    if (hits[0].x === hits[1].x) {\n      return generatePreciseAdjacentMove(Computer.#generateRandomAdjacentY);\n    }\n    return generatePreciseAdjacentMove(Computer.#generateRandomAdjacentX);\n  }\n  generateAttackCoordinates(gameBoard) {\n    if (this.#focusingShip && this.#focusingShip.isSunk()) {\n      this.#focusingShip = false;\n      this.#moves = [];\n      this.#lastMove = Computer.generateRandomAttack(gameBoard);\n      return this.#lastMove;\n    }\n    if (this.#focusingShip) return this.#generatePreciseAttack(gameBoard);\n    if (this.#lastMove && gameBoard[this.#lastMove.x][this.#lastMove.y].ship) {\n      this.#focusingShip = gameBoard[this.#lastMove.x][this.#lastMove.y].ship;\n      this.#moves.push({\n        ...this.#lastMove,\n        firstHit: true\n      });\n      return this.#generatePreciseAttack(gameBoard);\n    }\n    this.#lastMove = Computer.generateRandomAttack(gameBoard);\n    return this.#lastMove;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/player/computer/computer.js\n");

/***/ }),

/***/ "./src/player/player.js":
/*!******************************!*\
  !*** ./src/player/player.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\nclass Player {\n  #gameBoard;\n  #score = 0;\n  constructor(gameBoard) {\n    if (!gameBoard) {\n      throw new TypeError(\"gameBoard was not provided. All players must have a gameBoard\");\n    }\n    if (typeof gameBoard !== \"object\" || Array.isArray(gameBoard)) {\n      throw new TypeError(\"gameBoard must be a valid object\");\n    }\n    this.#gameBoard = gameBoard;\n  }\n  get gameBoard() {\n    return this.#gameBoard;\n  }\n  get score() {\n    return this.#score;\n  }\n  increaseScore() {\n    this.#score += 1;\n  }\n  resetScore() {\n    this.#score = 0;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWVyL3BsYXllci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUEsTUFBTSxDQUFDO0VBQzFCLENBQUNDLFNBQVM7RUFFVixDQUFDQyxLQUFLLEdBQUcsQ0FBQztFQUVWQyxXQUFXQSxDQUFDRixTQUFTLEVBQUU7SUFDckIsSUFBSSxDQUFDQSxTQUFTLEVBQUU7TUFDZCxNQUFNLElBQUlHLFNBQVMsQ0FDakIsK0RBQ0YsQ0FBQztJQUNIO0lBRUEsSUFBSSxPQUFPSCxTQUFTLEtBQUssUUFBUSxJQUFJSSxLQUFLLENBQUNDLE9BQU8sQ0FBQ0wsU0FBUyxDQUFDLEVBQUU7TUFDN0QsTUFBTSxJQUFJRyxTQUFTLENBQUMsa0NBQWtDLENBQUM7SUFDekQ7SUFFQSxJQUFJLENBQUMsQ0FBQ0gsU0FBUyxHQUFHQSxTQUFTO0VBQzdCO0VBRUEsSUFBSUEsU0FBU0EsQ0FBQSxFQUFHO0lBQ2QsT0FBTyxJQUFJLENBQUMsQ0FBQ0EsU0FBUztFQUN4QjtFQUVBLElBQUlDLEtBQUtBLENBQUEsRUFBRztJQUNWLE9BQU8sSUFBSSxDQUFDLENBQUNBLEtBQUs7RUFDcEI7RUFFQUssYUFBYUEsQ0FBQSxFQUFHO0lBQ2QsSUFBSSxDQUFDLENBQUNMLEtBQUssSUFBSSxDQUFDO0VBQ2xCO0VBRUFNLFVBQVVBLENBQUEsRUFBRztJQUNYLElBQUksQ0FBQyxDQUFDTixLQUFLLEdBQUcsQ0FBQztFQUNqQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9wbGF5ZXIvcGxheWVyLmpzPzRiYjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIHtcbiAgI2dhbWVCb2FyZDtcblxuICAjc2NvcmUgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKGdhbWVCb2FyZCkge1xuICAgIGlmICghZ2FtZUJvYXJkKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICBcImdhbWVCb2FyZCB3YXMgbm90IHByb3ZpZGVkLiBBbGwgcGxheWVycyBtdXN0IGhhdmUgYSBnYW1lQm9hcmRcIixcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBnYW1lQm9hcmQgIT09IFwib2JqZWN0XCIgfHwgQXJyYXkuaXNBcnJheShnYW1lQm9hcmQpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiZ2FtZUJvYXJkIG11c3QgYmUgYSB2YWxpZCBvYmplY3RcIik7XG4gICAgfVxuXG4gICAgdGhpcy4jZ2FtZUJvYXJkID0gZ2FtZUJvYXJkO1xuICB9XG5cbiAgZ2V0IGdhbWVCb2FyZCgpIHtcbiAgICByZXR1cm4gdGhpcy4jZ2FtZUJvYXJkO1xuICB9XG5cbiAgZ2V0IHNjb3JlKCkge1xuICAgIHJldHVybiB0aGlzLiNzY29yZTtcbiAgfVxuXG4gIGluY3JlYXNlU2NvcmUoKSB7XG4gICAgdGhpcy4jc2NvcmUgKz0gMTtcbiAgfVxuXG4gIHJlc2V0U2NvcmUoKSB7XG4gICAgdGhpcy4jc2NvcmUgPSAwO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUGxheWVyIiwiZ2FtZUJvYXJkIiwic2NvcmUiLCJjb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIkFycmF5IiwiaXNBcnJheSIsImluY3JlYXNlU2NvcmUiLCJyZXNldFNjb3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/player/player.js\n");

/***/ }),

/***/ "./src/ship/ship.js":
/*!**************************!*\
  !*** ./src/ship/ship.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Ship)\n/* harmony export */ });\nclass Ship {\n  #id;\n  #length;\n  #hits = 0;\n  constructor(length, id) {\n    if (!length) throw new TypeError(\"Ship length must be provided\");\n    if (typeof length !== \"number\") {\n      throw new TypeError(\"Ship length must be a number\");\n    }\n    if (length < 2 || length > 5) {\n      throw new RangeError(\"Ship length must not be lower than 2 or higher than 5\");\n    }\n    this.#id = id;\n    this.#length = length;\n  }\n  get id() {\n    return this.#id;\n  }\n  get length() {\n    return this.#length;\n  }\n  get hits() {\n    return this.#hits;\n  }\n  hit() {\n    if (this.isSunk()) {\n      throw new RangeError(\"Ship has already been sunk (no. of hits is equal to ship's length)\");\n    }\n    this.#hits += 1;\n  }\n  isSunk() {\n    return this.#hits === this.#length;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hpcC9zaGlwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxNQUFNQSxJQUFJLENBQUM7RUFDeEIsQ0FBQ0MsRUFBRTtFQUNILENBQUNDLE1BQU07RUFFUCxDQUFDQyxJQUFJLEdBQUcsQ0FBQztFQUVUQyxXQUFXQSxDQUFDRixNQUFNLEVBQUVELEVBQUUsRUFBRTtJQUN0QixJQUFJLENBQUNDLE1BQU0sRUFBRSxNQUFNLElBQUlHLFNBQVMsQ0FBQyw4QkFBOEIsQ0FBQztJQUVoRSxJQUFJLE9BQU9ILE1BQU0sS0FBSyxRQUFRLEVBQUU7TUFDOUIsTUFBTSxJQUFJRyxTQUFTLENBQUMsOEJBQThCLENBQUM7SUFDckQ7SUFFQSxJQUFJSCxNQUFNLEdBQUcsQ0FBQyxJQUFJQSxNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQzVCLE1BQU0sSUFBSUksVUFBVSxDQUNsQix1REFDRixDQUFDO0lBQ0g7SUFFQSxJQUFJLENBQUMsQ0FBQ0wsRUFBRSxHQUFHQSxFQUFFO0lBQ2IsSUFBSSxDQUFDLENBQUNDLE1BQU0sR0FBR0EsTUFBTTtFQUN2QjtFQUVBLElBQUlELEVBQUVBLENBQUEsRUFBRztJQUNQLE9BQU8sSUFBSSxDQUFDLENBQUNBLEVBQUU7RUFDakI7RUFFQSxJQUFJQyxNQUFNQSxDQUFBLEVBQUc7SUFDWCxPQUFPLElBQUksQ0FBQyxDQUFDQSxNQUFNO0VBQ3JCO0VBRUEsSUFBSUMsSUFBSUEsQ0FBQSxFQUFHO0lBQ1QsT0FBTyxJQUFJLENBQUMsQ0FBQ0EsSUFBSTtFQUNuQjtFQUVBSSxHQUFHQSxDQUFBLEVBQUc7SUFDSixJQUFJLElBQUksQ0FBQ0MsTUFBTSxDQUFDLENBQUMsRUFBRTtNQUNqQixNQUFNLElBQUlGLFVBQVUsQ0FDbEIsb0VBQ0YsQ0FBQztJQUNIO0lBQ0EsSUFBSSxDQUFDLENBQUNILElBQUksSUFBSSxDQUFDO0VBQ2pCO0VBRUFLLE1BQU1BLENBQUEsRUFBRztJQUNQLE9BQU8sSUFBSSxDQUFDLENBQUNMLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQ0QsTUFBTTtFQUNwQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zaGlwL3NoaXAuanM/ZTYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTaGlwIHtcbiAgI2lkO1xuICAjbGVuZ3RoO1xuXG4gICNoaXRzID0gMDtcblxuICBjb25zdHJ1Y3RvcihsZW5ndGgsIGlkKSB7XG4gICAgaWYgKCFsZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTaGlwIGxlbmd0aCBtdXN0IGJlIHByb3ZpZGVkXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBsZW5ndGggIT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTaGlwIGxlbmd0aCBtdXN0IGJlIGEgbnVtYmVyXCIpO1xuICAgIH1cblxuICAgIGlmIChsZW5ndGggPCAyIHx8IGxlbmd0aCA+IDUpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFxuICAgICAgICBcIlNoaXAgbGVuZ3RoIG11c3Qgbm90IGJlIGxvd2VyIHRoYW4gMiBvciBoaWdoZXIgdGhhbiA1XCIsXG4gICAgICApO1xuICAgIH1cblxuICAgIHRoaXMuI2lkID0gaWQ7XG4gICAgdGhpcy4jbGVuZ3RoID0gbGVuZ3RoO1xuICB9XG5cbiAgZ2V0IGlkKCkge1xuICAgIHJldHVybiB0aGlzLiNpZDtcbiAgfVxuXG4gIGdldCBsZW5ndGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2xlbmd0aDtcbiAgfVxuXG4gIGdldCBoaXRzKCkge1xuICAgIHJldHVybiB0aGlzLiNoaXRzO1xuICB9XG5cbiAgaGl0KCkge1xuICAgIGlmICh0aGlzLmlzU3VuaygpKSB7XG4gICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcbiAgICAgICAgXCJTaGlwIGhhcyBhbHJlYWR5IGJlZW4gc3VuayAobm8uIG9mIGhpdHMgaXMgZXF1YWwgdG8gc2hpcCdzIGxlbmd0aClcIixcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMuI2hpdHMgKz0gMTtcbiAgfVxuXG4gIGlzU3VuaygpIHtcbiAgICByZXR1cm4gdGhpcy4jaGl0cyA9PT0gdGhpcy4jbGVuZ3RoO1xuICB9XG59XG4iXSwibmFtZXMiOlsiU2hpcCIsImlkIiwibGVuZ3RoIiwiaGl0cyIsImNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiUmFuZ2VFcnJvciIsImhpdCIsImlzU3VuayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ship/ship.js\n");

/***/ }),

/***/ "./src/DOM/DOMapp.css":
/*!****************************!*\
  !*** ./src/DOM/DOMapp.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRE9NL0RPTWFwcC5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9ET00vRE9NYXBwLmNzcz8yMGI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/DOM/DOMapp.css\n");

/***/ }),

/***/ "./src/DOM/shipPlacementModal/shipPlacementModal.css":
/*!***********************************************************!*\
  !*** ./src/DOM/shipPlacementModal/shipPlacementModal.css ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRE9NL3NoaXBQbGFjZW1lbnRNb2RhbC9zaGlwUGxhY2VtZW50TW9kYWwuY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvRE9NL3NoaXBQbGFjZW1lbnRNb2RhbC9zaGlwUGxhY2VtZW50TW9kYWwuY3NzP2ZmMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/DOM/shipPlacementModal/shipPlacementModal.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;